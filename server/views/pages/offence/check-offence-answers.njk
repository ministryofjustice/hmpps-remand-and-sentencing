{% extends "../../partials/appearanceDetailsLayout.njk" %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "hmpps/components/court-cases-release-dates/offence-card/macro.njk" import offenceCard %}
{%- from "moj/components/banner/macro.njk" import mojBanner -%}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}


{% set offenceSentence = 'sentence' if courtAppearance.warrantType === 'SENTENCING' else 'offence' %}
{% set hideOffences = true %}

{% set pageTitle = applicationName + " - Check offences" %}

    {% block pageContent %}
        {% include "../../partials/offenceCaption.njk" %}
        <h1 class="govuk-heading-l">
            You have added {{courtAppearance.offences.length }} {{"offence" if courtAppearance.offences.length === 1 else "offences"}}
        </h1>
        
        {% if courtAppearance.warrantType === 'SENTENCING' and courtAppearance.hasOverallSentenceLength === 'true' %}
            {{ govukSummaryList({
                rows: [
                    {
                        key: {
                            text: "Overall sentence length"
                        },
                        value: {
                            text: courtAppearance.overallSentenceLength | formatLengths
                        }
                    },
                    {
                        key: {
                            text: "Sentences added"
                        },
                        value: {
                            text: overallSentenceLengthComparison.custodialLength | formatLengthsWithoutPeriodOrder
                        }
                    }
                ],
                attributes: {
                    "data-qa": "overallSentenceLengthComparison"
                }
            }) }}
        {% endif %}

        {{ govukButton({
            text: "Add an offence" ,
            classes: "govuk-button--link",
            href: "/person/" + nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference + "/offences/" + courtAppearance.offences | length + "/add-another-offence",
            attributes: {
                "data-qa": "addAnotherOffence"
            }
        }) }}

        {% if courtAppearance.offences.length == 0 %}
            {{ govukInsetText({
                text: "No offences have been added to this appearance."
            }) }}
        {% endif %}

    

        {% for offence in courtAppearance.offences %}
            {{ offenceCard({
                offenceCode: offence.offenceCode,
                offenceName: offenceMap[offence.offenceCode],
                offenceStartDate: offence.offenceStartDate | formatDate,
                offenceEndDate: offence.offenceEndDate | formatDate,
                outcome: outcomeMap[offence.outcomeUuid] | outcomeValueOrLegacy(offence.legacyData),
                countNumber: offence.sentence.countNumber,
                convictionDate: offence.sentence.convictionDate | formatDate,
                terrorRelated: offence.terrorRelated,
                isSentenced: offence.sentence,
                periodLengths: offence.sentence.periodLengths,
                sentenceServeType: offence.sentence.sentenceServeType,
                consecutiveTo: offence.sentence.consecutiveTo,
                sentenceType: sentenceTypeMap[offence.sentence.sentenceTypeId] if offence.sentence,
                fineAmount: offence.sentence.fineAmount,
                actions: {
                    items: [
                        {
                            href: "/person/" + nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference +"/offences/" + loop.index0 + "/edit-offence",
                            text: "Edit",
                            visuallyHiddenText: "edit offence"
                        },
                        {
                            href: "/person/" + nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference +"/offences/" + loop.index0 + "/delete-offence",
                            text: "Delete",
                            visuallyHiddenText: "delete offence"
                        }
                    ]
                }
            }) }}
        {% endfor %}

        {% if courtAppearance.offences.length > 0 %}
            <div class="govuk-button-group govuk-!-margin-top-8">
                <form method="post">
                    <input type="hidden" name="_csrf" value="{{ csrfToken }}">
                    {{ govukRadios({
                        id: "finishedAddingOffences",
                        name: "finishedAddingOffences",
                        fieldset: {
                            legend: {
                                text: "Have you finished adding offences?",
                                classes: "govuk-fieldset__legend--m"
                            }
                        },
                        errorMessage: errors | findError('finishedAddingOffences'),
                        items: [
                            {
                                value: "true",
                                text: "Yes, I've finished adding offences",
                                attributes: {
                                "data-qa": "finishAddingRadio"
                            }
                            },
                            {
                                value: "false",
                                text: "No, I'll come back later",
                                attributes: {
                                "data-qa": "notFinishedRadio"
                            }
                            }
                        ]
                    }) }}

                    <div class="govuk-button-group">
                        <button type="submit"
                                class="govuk-button"
                                data-module="govuk-button"
                                data-qa="finishAddingButton"
                                formaction="/person/{{ nomsId }}/{{ addOrEditCourtCase }}/{{ courtCaseReference }}/{{ addOrEditCourtAppearance }}/{{ appearanceReference }}/submit-check-offence-answers">
                            Continue
                        </button>

                        {% if featureToggles.saveDraftEnabled %}
                            <button type="submit"
                                    class="govuk-button govuk-button--secondary"
                                    data-module="govuk-button"
                                    data-qa="save-draft-button"
                                    formaction="/person/{{ nomsId }}/{{ addOrEditCourtCase }}/{{ courtCaseReference }}/{{ addOrEditCourtAppearance }}/{{ appearanceReference }}/submit-draft">
                                Save as draft
                            </button>
                        {% endif %}
                    </div>
                </form>
            </div>
        {% endif %}

    {% endblock %}
