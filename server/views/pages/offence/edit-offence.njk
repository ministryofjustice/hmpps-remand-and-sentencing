{% extends "../../partials/prisonerBannerBackLayout.njk" %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}

{% set terrorRelated = 'Not entered' %}
{% if offence.terrorRelated %}
    {% set terrorRelated = 'Yes' %}
{% elseif offence.terrorRelated === false %}
    {% set terrorRelated = 'No' %}
{% endif %}
{% set summaryRows=[{
                    key: {
                        text: "Offence"
                    },
                    value: {
                        text: offence.offenceCode + " " +  offenceMap[offence.offenceCode]
                    },
                    actions: {
                        items: [{
                            href: "/person/" +  nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference + "/offences/" + offenceReference + "/offence-code?submitToEditOffence=true",
                            text: "Edit",
                            visuallyHiddenText: "offence code"
                        }]
                    }
                },
                {
                    key: {
                        text: "Terror related"
                    }, value: {
                        text: terrorRelated
                    },
                    actions: {
                        items: [{
                            href: "/person/" +  nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference + "/offences/" + offenceReference + "/terror-related?submitToEditOffence=true",
                            text: "Edit",
                            visuallyHiddenText: "terror related"
                        }]
                    }
                },
                {
                    key: {
                        text: "Committed on"
                    }, value: {
                        text: offence.offenceStartDate | formatDate if offence.offenceStartDate else 'Not entered' + (" to " + offence.offenceEndDate | formatDate if offence.offenceEndDate else '')
                    },
                    actions: {
                        items: [{
                            href: "/person/" +  nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference + "/offences/" + offenceReference + "/offence-date?submitToEditOffence=true",
                            text: "Edit",
                            visuallyHiddenText: "committed on"
                        }]
                    }
                }] %}

{% if offence.sentence %}
    {% if offence.sentence.countNumber %}
        {% set countNumber = "Count " + offence.sentence.countNumber %}
    {% else %}
        {% set countNumber = "Not entered" %}
    {% endif %}
    {% set summaryRows = ([{
                    key: {
                    text: "Count number"
                },
                    value: {
                    text: countNumber
                },
                    actions: {
                        items: [{
                            href: "/person/" +  nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference + "/offences/" + offenceReference + "/count-number?submitToEditOffence=true",
                            text: "Edit",
                            visuallyHiddenText: "count number"
                        }]
                    }
                }].concat(summaryRows,[{
                    key: {
                        text: "Conviction date"
                    }, value: {
                        text: (offence.sentence.convictionDate | formatDate if offence.sentence.convictionDate else 'N/A')
                    },
                    actions: {
                        items: [{
                            href: "/person/" +  nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference + "/offences/" + offenceReference + "/conviction-date?submitToEditOffence=true",
                            text: "Edit",
                            visuallyHiddenText: "conviction date"
                        }]
                    }
                },
                {
                    key: {
                    text: "Sentence type"
                },
                    value: {
                    text: sentenceType | sentenceTypeValueOrLegacy(offence.sentence.legacyData)
                },
                    actions: {
                        items: [{
                            href: "/person/" +  nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference + "/offences/" + offenceReference + "/sentence-type?submitToEditOffence=true",
                            text: "Edit",
                            visuallyHiddenText: "sentence type"
                        }]
                    }
                },{
                    key: {
                    text: "Sentence length"
                },
                    value: {
                    text: sentenceLength
                },
                    actions: {
                        items: [{
                            href: "/person/" +  nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference + "/offences/" + offenceReference + "/period-length?periodLengthType=" + sentenceLengthType + "&submitToEditOffence=true",
                            text: "Edit",
                            visuallyHiddenText: "sentence length"
                        }]
                    }
                },{
                    key: {
                    text: "Consecutive or concurrent"
                },
                    value: {
                    text: offence.sentence.sentenceServeType | capitalize + (' to count ' + offence.sentence.consecutiveTo if offence.sentence.consecutiveTo else '' )
                },
                    actions: {
                        items: [{
                            href: "/person/" +  nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference + "/offences/" + offenceReference + "/sentence-serve-type?submitToEditOffence=true",
                            text: "Edit",
                            visuallyHiddenText: "consecutive or concurrent"
                    }]
                }
            }] )) %}
{% else %}
    {% set summaryRows = (summaryRows.concat({
                    key: {
                        text: "Outcome"
                    }, value: {
                        text: outcome | outcomeValueOrLegacy(offence.legacyData)
                    },
                    actions: {
                        items: [{
                            href: "/person/" +  nomsId + "/" + addOrEditCourtCase + "/" + courtCaseReference  + "/" + addOrEditCourtAppearance + "/" + appearanceReference + "/offences/" + offenceReference + "/offence-outcome?submitToEditOffence=true",
                            text: "Edit",
                            visuallyHiddenText: "outcome"
                        }]
                    }
                    })) %}
{% endif %}

{% set pageTitle = applicationName + " - Edit an offence" %}
{% block content %}
    {{ super() }}
    <div class="govuk-grid-row govuk-!-margin-top-4">
        <div class="govuk-grid-column-two-thirds">
            <form method="post" action="/person/{{ nomsId }}/{{ addOrEditCourtCase }}/{{ courtCaseReference }}/{{ addOrEditCourtAppearance }}/{{ appearanceReference }}/offences/{{ offenceReference }}/submit-edit-offence">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}">
                {% include "../../partials/offenceCaption.njk" %}
                <h1 class="govuk-heading-l">Edit offence details</h1>
                
                {{ govukSummaryList({
                    rows: summaryRows
                }) }}

                {{ govukButton({
                    text: "Accept changes",
                    attributes: {  'data-qa': 'continue-button' }
                }) }}
            </form>
        </div>
    </div>
{% endblock %}